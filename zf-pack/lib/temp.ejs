// zfpx-jw
(function (modules) {
  var installedModules = {};
  function __webpack_require__(moduleId) {
    if (installedModules[moduleId]) {
      return installedModules[moduleId].exports;
    }
    var module = installedModules[moduleId] = {
      i: moduleId,
      l: false,
      exports: {}
    };

    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
    module.l = true;

    return module.exports;
  }
  return __webpack_require__(__webpack_require__.s = "<%-entryId%>");
})
  ({
    <%for(let key in modules){%>
    "<%-key%>":
      (function (module, exports, __webpack_require__) {
        eval(`<%-modules[key]%>`);
      }),
    <%}%>
  });

// 1）  我们打包的结果的路径 都是相对路径 并且都是以当前项目的目录为基准
// 2） 对象的value就是当前模块对应的代码
// 3） require方法更改成__webpack_require__  ast
// 4） main/b.js => "./src/main/b.js\"
// 5) 需要获取当前的webpack.config.j's